email_eu_all <- fread("input/code/added_networks/email_eu_all.txt")
View(email_eu_all)
email_eu_all <- fread("input/code/added_networks/email_eu_all.txt", col.names = c("Node1","Node2"))
View(email_eu_all)
email_eu_all <- fread("input/code/added_networks/email_eu_all.txt", col.names = c("Node1","Node2"))
email_eu_all <- fread("input/code/added_networks/email_eu_all.txt", col.names = c("Node1","Node2"))
email_eu_all <- fread("input/code/added_networks/email_eu_all.txt")
email_eu_all <- fread("input/code/added_networks/email_eu_all.txt", col.names = c("Node1","Node2"))
email_eu_all <- fread("input/code/added_networks/email_eu_all.txt")
View(email_eu_all)
email_eu_all <- fread("input/code/added_networks/email_eu_all.txt", col.names = c("Node1","Node2"))
View(email_eu_all)
write.table(email_eu_all, file = "data/added_networks/email_eu_all.csv", row.names = F, sep = ",")
network <- data.frame(network_name = "email_eu_all", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "420045")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
library(readr)
ecoli_transcription_v1_0 <- fread("data/netzschleuder_data/ecoli_transcription_v1.0.csv")
View(ecoli_transcription_v1_0)
ecoli_transcription_v1_0 <- read_csv("data/netzschleuder_data/ecoli_transcription_v1.0.csv")
ecoli_transcription_v1_0 <- fread("data/netzschleuder_data/ecoli_transcription_v1.0.csv")
library(data.table)
library(igraph)
ecoli_transcription_v1_0 <- fread("data/netzschleuder_data/ecoli_transcription_v1.0.csv")
g <- graph_from_data_frame(ecoli_transcription_v1_0, directed = T)
recipr <- reciprocity(g)
if(is.null(recipr)){
recipr <- NA
}
is.null(recipr)
recipr <- reciprocity(g)
is.null(recipr)
a <- 1-1
is.null(a)
class(recipr)
class(as.integer(recipr))
is.null(as.integer(recipr))
recipr <- reciprocity(g)
if(recipr == 0){
recipr <- NA
}
?is.null
is.null(0)
library(readr)
twitter_follower <- fread("data/added_networks/twitter_follower.csv")
View(twitter_follower)
g <- graph_from_data_frame(twitter_follower, directed = T)
recipr <- reciprocity(g)
reciprocity(g)
library(readr)
netzschleuder_essentials <- read_csv("input/import_datasets/netzschleuder_essentials.csv")
View(netzschleuder_essentials)
ICON_data = fread("input/import_datasets/ICON_data.csv")
i <- 1
directed = ICON_data[i, directed]
i <- 2
directed = ICON_data[i, directed]
i <- 30
directed = ICON_data[i, directed]
i <- 25
directed = ICON_data[i, directed]
library(data.table)
library(igraph)
library(readr)
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, graphProperties]
View(OLP_complete)
library(data.table)
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, graphProperties]
OLP_complete <- data.frame(fread("input/import_datasets/OLP_complete.csv")[, graphProperties])
View(OLP_complete)
OLP_complete <- data.frame(fread("input/import_datasets/OLP_complete.csv")[, c("network_name", "graphProperties"])
OLP_complete <- data.frame(fread("input/import_datasets/OLP_complete.csv")[, c("network_name", "graphProperties")])
View(OLP_complete)
OLP_complete <- data.frame(fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")])
View(OLP_complete)
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
View(OLP_complete)
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
View(OLP_essentials)
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Bipartite", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
type_list <- c(which(OLP_complete[, graphProperties] == TRUE))
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Projection", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
type_list <- c(which(OLP_complete[, graphProperties] == TRUE))
OLP_complete <- OLP_complete[-type_list]
View(OLP_complete)
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
#### deleting bipartite networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Bipartite", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
type_list <- c(which(OLP_complete[, graphProperties] == TRUE))
OLP_complete <- OLP_complete[-type_list]
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Projection", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
projection_list <- c(which(OLP_complete[, graphProperties] == TRUE))
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
#### deleting bipartite networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Bipartite", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
type_list <- c(which(OLP_complete[, graphProperties] == TRUE))
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
OLP_complete <- OLP_complete[-type_list]
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Projection", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
projection_list <- c(which(OLP_complete[, graphProperties] == TRUE))
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
OLP_essentials <- OLP_essentials[-projection_list]
library(readr)
OLP_measures <- fread("output/OLP_measures.csv")
View(OLP_measures)
OLP_measures <- OLP_measures[-projection_list]
write.table(OLP_essentials, file = "input/import_datasets/OLP_essentials.csv", row.names = F, sep = ",")
write.table(OLP_measures, file = "output/OLP_measures.csv", row.names = F, sep = ",")
View(OLP_measures)
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
OLP_complete <- OLP_complete[-type_list]
#### deleting bipartite networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Bipartite", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
type_list <- c(which(OLP_complete[, graphProperties] == TRUE))
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
OLP_complete <- OLP_complete[-type_list]
View(OLP_complete)
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Projection", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
View(OLP_complete)
# load in OLP data
OLP_files <- list.files(path = "data/OLP_data", pattern = "*.csv", full.names = TRUE)
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
ICON_measures <- fread("output/ICON_measures.csv")
netzschleuder_measures <- fread("output/netzschleuder_measures.csv")
OLP_measures <- fread("output/OLP_measures.csv")
master <- rbind(ICON_measures, netzschleuder_measures, OLP_measures)
View(master)
table(master$NetworkDomain)
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
#### deleting bipartite networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Bipartite", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
type_list <- c(which(OLP_complete[, graphProperties] == TRUE))
#### deleting projection networks
OLP_complete <- fread("input/import_datasets/OLP_complete.csv")[, c("title", "graphProperties")]
OLP_complete$title <- tolower(OLP_complete$title)
OLP_complete <- OLP_complete[order(OLP_complete$title)]
OLP_complete <- OLP_complete[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_complete <- OLP_complete[-c(217:328)]
OLP_complete <- OLP_complete[-type_list]
View(OLP_complete)
for(i in 1:length(OLP_complete[, graphProperties])){
if(length(grep("Projection", OLP_complete[i, graphProperties],  OLP_complete$graphProperties)) == 1){
OLP_complete[i, "graphProperties"] <- sub(".*", "TRUE", OLP_complete[i, graphProperties])
} else {
OLP_complete[i, "graphProperties"] <- sub(".*", "FALSE", OLP_complete[i, graphProperties])
}
}
View(OLP_complete)
View(OLP_essentials)
library(readr)
OLP_essentials <- read_csv("OLP_essentials.csv")
View(OLP_essentials)
OLP_essentials <- fread("OLP_essentials.csv")
View(OLP_essentials)
OLP_essentials$network_name <- tolower(OLP_essentials$network_name)
View(OLP_essentials)
OLP_essentials2 <- fread("input/import_datasets/OLP_essentials.csv")
View(OLP_essentials)
View(OLP_essentials2)
OLP_essentials <- OLP_essentials[-c(57, 74:99, 202, 209:215, 252, 528:531)]
OLP_essentials <- OLP_essentials[-c(217:328)]
OLP_essentials <- OLP_essentials[-type_list)]
OLP_essentials <- OLP_essentials[-type_list]
View(OLP_essentials)
OLP_essentials$networkDomain <- gsub("Social", "Social,Offline", OLP_essentials)
OLP_essentials$networkDomain <- gsub("Social", "Social,Offline", OLP_essentials$networkDomain)
write.table(OLP_essentials, file = "input/import_datasets/OLP_essentials.csv", row.names = F, sep = ",")
# load in OLP data
OLP_files <- list.files(path = "data/OLP_data", pattern = "*.csv", full.names = TRUE)
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
View(OLP_essentials)
####### Optimal Link Prediction data (510 networks)
# load in functions
source("R/OLP_functions.R")
# load in OLP data
OLP_files <- list.files(path = "data/OLP_data", pattern = "*.csv", full.names = TRUE)
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
for(i in 1:length(OLP_files)){
OLP_network <- fread(OLP_files[i])
OLP.network.measures(OLP_network, i)
rm(OLP_network)
}
library(igraph)
for(i in 1:length(OLP_files)){
OLP_network <- fread(OLP_files[i])
OLP.network.measures(OLP_network, i)
rm(OLP_network)
}
library(readr)
OLP_measures <- read_csv("output/OLP_measures.csv")
View(OLP_measures)
for(i in 1:length(OLP_files)){
OLP_network <- fread(OLP_files[i])
OLP.network.measures(OLP_network, i)
rm(OLP_network)
}
email <- fread("data/added_networks/email_network.csv")
View(email)
library(readr)
netzschleuder_measures <- read_csv("output/netzschleuder_measures.csv")
View(netzschleuder_measures)
added_networks_measures <- fread("output/added_networks_measures.csv")
library(data.table)
library(igraph)
added_networks_measures <- fread("output/added_networks_measures.csv")
added_networks_measures <- added_networks_measures[order(added_networks_measures$NetworkDomain)]
View(added_networks_measures)
added_networks_measures <- fread("output/added_networks_measures.csv")
View(added_networks_measures)
added_networks_measures <- added_networks_measures[order(added_networks_measures$NetworkDomain)]
added_networks_measures <- added_networks_measures[order(added_networks_measures$Name)]
View(added_networks_measures)
added_networks <- fread("input/import_datasets/added_networks.csv")
added_networks <- added_networks[order(added_networks$network_name)]
write.table(added_networks_measures, file = "output/added_networks_measures.csv", sep = ",", row.names = F)
added_networks <- fread("input/import_datasets/added_networks.csv")
added_networks <- added_networks[order(added_networks$network_name)]
write.table(added_networks_measures, file = "input/import_datasets/added_networks.csv", sep = ",", row.names = F)
#### load in measures
ICON_measures <- fread("output/ICON_measures.csv")
netzschleuder_measures <- fread("output/netzschleuder_measures.csv")
OLP_measures <- fread("output/OLP_measures.csv")
added_networks_measures <- fread("output/added_networks_measurs.csv")
added_networks2 <- fread <- fread("output/added_networks_measurs2.csv")
#### load in measures
ICON_measures <- fread("output/ICON_measures.csv")
netzschleuder_measures <- fread("output/netzschleuder_measures.csv")
OLP_measures <- fread("output/OLP_measures.csv")
added_networks_measures <- fread("output/added_networks_measurs.csv")
#### create master table
master_measures <- rbind(ICON_measures, netzschleuder_measures, OLP_measures, added_networks_measures, added_networks2)
#### load in measures
ICON_measures <- fread("output/ICON_measures.csv")
netzschleuder_measures <- fread("output/netzschleuder_measures.csv")
OLP_measures <- fread("output/OLP_measures.csv")
added_networks_measures <- fread("output/added_networks_measures.csv")
#### create master table
master_measures <- rbind(ICON_measures, netzschleuder_measures, OLP_measures, added_networks_measures, added_networks2)
#### create master table
master_measures <- rbind(ICON_measures, netzschleuder_measures, OLP_measures, added_networks_measures)
table(master_measures$NetworkDomain)
View(master_measures)
View(master_measures)
View(OLP_measures)
View(netzschleuder_measures)
library(readr)
OLP_essentials <- read_csv("input/import_datasets/OLP_essentials.csv")
View(OLP_essentials)
library(readr)
netzschleuder_essentials <- read_csv("input/import_datasets/netzschleuder_essentials.csv")
View(netzschleuder_essentials)
View(OLP_essentials)
#### load in measures
ICON_measures <- fread("output/ICON_measures.csv")
netzschleuder_measures <- fread("output/netzschleuder_measures.csv")
OLP_measures <- fread("output/OLP_measures.csv")
added_networks_measures <- fread("output/added_networks_measures.csv")
#### create master table
master_measures <- rbind(ICON_measures, netzschleuder_measures, OLP_measures, added_networks_measures)
table(master_measures$NetworkDomain)
length(master[directed == TRUE & networkDomain == "Biological", network_name])
length(master[directed == TRUE & networkDomain == "Economic", network_name])
length(master[directed == TRUE & networkDomain == "Informational", network_name])
length(master[directed == TRUE & networkDomain == "Social,Offline", network_name])
#### load in datasets
netzschleuder_essentials <- fread("input/import_datasets/netzschleuder_essentials.csv")
ICON_data <- fread("input/import_datasets/ICON_data.csv")
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
added_networks <- fread("input/import_datasets/added_networks.csv")
master <- rbind(netzschleuder_essentials, ICON_data, OLP_essentials, added_networks)
length(master[directed == TRUE & networkDomain == "Biological", network_name])
length(master[directed == TRUE & networkDomain == "Economic", network_name])
length(master[directed == TRUE & networkDomain == "Informational", network_name])
length(master[directed == TRUE & networkDomain == "Social,Offline", network_name])
master <- rbind(netzschleuder_essentials, ICON_data, OLP_essentials, added_networks)
network <- data.frame(network_name = "email_eu_all", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "420045")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "email_network", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "10903")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "gemsec_hr", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "498202")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "gemsec_hu", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "222887")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "gemsec_ro", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "125826")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "github_2", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "289003")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "gplus", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "39242")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "hamsterer", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "16630")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "highschool_2011", networkDomain = "Social,Offline", directed = "FALSE",
number_edges = "28561")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "highschool_2012", networkDomain = "Social,Offline", directed = "FALSE",
number_edges = "45047")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "last_fm", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "517759")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "slashdot_2", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "549202")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "slashdot_3", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "516575")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "slashdot_1", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "545671")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "slashdot_zoo_2009", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "948464")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "slashdot_zoo_2008", networkDomain = "Social,Online", directed = "TRUE",
number_edges = "905468")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "turker_network", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "5268")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "twitch_de", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "153138")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "twitch_engb", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "35324")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "twitch_es", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "59382")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "twitch_fr", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "112666")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "twitch_ptbr", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "31299")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
network <- data.frame(network_name = "twitch_ru", networkDomain = "Social,Online", directed = "FALSE",
number_edges = "37304")
write.table(network, file = "input/import_datasets/added_networks.csv", row.names = F, sep = ",",
append = T, col.names = F)
View(added_networks)
View(added_networks_measures)
View(added_networks)
added_networks_essentials <- fread("input/import_datasets/added_networks.csv")
added_networks_essentials <- added_networks_essentials[order(added_networks_essentials$V1)]
View(added_networks_essentials)
added_networks_essentials <- fread("input/import_datasets/added_networks_essentials.csv")
added_networks_essentials <- added_networks_essentials[order(added_networks_essentials$network_name)]
View(added_networks_essentials)
added_networks_essentials <- fread("input/import_datasets/added_networks_essentials.csv")
added_networks_essentials <- fread("input/import_datasets/added_networks_essentials.csv")
added_networks_essentials <- added_networks_essentials[order(added_networks_essentials$network_name)]
View(added_networks_essentials)
write.table(added_networks_essentials, "input/import_datasets/added_networks_essentials.csv", sep = ",", row.names = F)
library(readr)
added_networks_essentials <- read_csv("input/import_datasets/added_networks_essentials.csv")
View(added_networks_essentials)
#### load in datasets
netzschleuder_essentials <- fread("input/import_datasets/netzschleuder_essentials.csv")
ICON_data <- fread("input/import_datasets/ICON_data.csv")
OLP_essentials <- fread("input/import_datasets/OLP_essentials.csv")
added_networks_essentials <- fread("input/import_datasets/added_networks_essentials.csv")
master <- rbind(netzschleuder_essentials, ICON_data, OLP_essentials, added_networks_essentials)
table(master$directed)
length(master[directed == TRUE & networkDomain == "Biological", network_name])
length(master[directed == TRUE & networkDomain == "Economic", network_name])
length(master[directed == TRUE & networkDomain == "Informational", network_name])
length(master[directed == TRUE & networkDomain == "Social,Offline", network_name])
length(master[directed == TRUE & networkDomain == "Social,Online", network_name])
length(master[directed == TRUE & networkDomain == "Technological", network_name])
length(master[directed == TRUE & networkDomain == "Transportation", network_name])
